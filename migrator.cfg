# [SOURCE]
source_remote_url="bitbucket.org:my-bb-org"
#Path to ssh key used to pull data from source remote repo- likely "~/.ssh/*" on your machine
source_ssh_key_local_path="/apps/git-repo-migrator/.ssh/bi-mgmt-ssh-key"

#All repositories we want to migrate. This list should be auto-updated
#by the sidecar application 'repo-list-updater.py'. If that script is not running,
#this list can also be edited manually:
repos_to_migrate=('admin-server'
'automation'
'terraform-modules'
'dpw-sf-connector'
'dwh'
'helm'
'infrastructure'
'InSaM'
'local-infrastructure'
'mock-service'
'api-mockup'
'vg-components')

#NOTE: 'main' and 'prod' are intended only as alternate spellings of 'master' and 'production'.
#How should I configure the code to react if it doesn't find one of these branches? Or any of these branches?
#IDEA: Maybe it will only warn if there is less than 3 branches, and fail if no branches are found?
branches_to_migrate=('master','main','qa','production','prod')

# [SINK]
sink_remote_url="github.com:my-gh-org"
#Path to ssh key used to pull data from source remote repo- likely "~/.ssh/*" on your machine
sink_ssh_key_local_path="/apps/git-repo-migrator/.ssh/bi-mgmt-ssh-key"

#This code can also dynamically give access to a newly-created repo to a 'team' in
#the sink organization. Specify the team name and what type of access they should have.
#see the code for more implementation details.
sink_team_access_name="my-gh-team"
sink_team_access_type="pull"

#NOTE: These are the author details which will be in every commit (in order to anonymize the commits in the sink repository):
anon_author_name="example-dev"
anon_author_email="example-dev@example.com"